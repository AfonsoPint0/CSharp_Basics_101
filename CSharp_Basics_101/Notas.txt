// Print
//Console.WriteLine("text");

//---------- String control ----------//

// String interpolaiton
//string aFriend0 = "Bill";
//string aFriend1 = "Billa";
//Console.WriteLine($"The name {aFriend0} has {aFriend0.Length} letters");
//Console.WriteLine($"The name {aFriend1} has {aFriend1.Length} letters");

// Trim Strings
//string greetings = "    Text    ";
//Console.WriteLine($"[{greetings}]");

//string trimedStardGreeting = greetings.TrimStart();
//Console.WriteLine($"[{trimedStardGreeting}]");

//string trimedEndGreeting = greetings.TrimEnd();
//Console.WriteLine($"[{trimedEndGreeting}]");

//string trimedGreeting = greetings.Trim();
//Console.WriteLine($"[{trimedGreeting}]");

// String replace
//string sayHello = "Hello world!";
//Console.WriteLine(sayHello);

//sayHello = sayHello.Replace("Hello", "Greetings");
//Console.WriteLine(sayHello);


// String to Upper, Lower
//string sayHello = "Hello world!";
//Console.WriteLine(sayHello);

//sayHello = sayHello.ToUpper();
//Console.WriteLine(sayHello);

//sayHello = sayHello.ToLower();
//Console.WriteLine(sayHello);


// Search strings
//string songLyrics = "You say greetings, and I say hello";

//var result0 = songLyrics.Contains("goodbye");
//Console.WriteLine(result0);

//var result1 = songLyrics.Contains("greetings");
//Console.WriteLine(result1);


//---------- Math ----------//
// variáveis: int, decimal, double, long

//int a = 20;
//int b = 40;
//int c = 10;
//int d = 4;
//int e = 2;
//int f = a + b - c * d / e;
//Console.WriteLine(d);

//int a = 7;
//int b = 4;
//int c = 3;
//int d = (a + b) / c;
//int e = (a + b) % c;
//Console.WriteLine($"quotient: {d}");
//Console.WriteLine($"remainder: {e}");

//int max = int.MaxValue;
//int min = int.MinValue;
//Console.WriteLine($"The range of integers is {min} to {max}");

//int what = max + 3;
//Console.WriteLine($"An example of overflow: {what}");

//double a = 5;
//double b = 4;
//double c = 2;
//double d = (a + b) / c;
//Console.WriteLine(d);

//double max = double.MaxValue;
//double min = double.MinValue;
//Console.WriteLine($"The range of double is {min} to {max}");

//double third = 1.0 / 3.0;
//Console.WriteLine(third);

//decimal min = decimal.MinValue;
//decimal max = decimal.MaxValue;
//Console.WriteLine($"The range of decimal is {min} to {max}");

//double a = 1.0;
//double b = 3.0;
//Console.WriteLine(a / b);

//decimal c = 1.0M;
//decimal d = 3.0M;
//Console.WriteLine(c / d);

//double radius = 2.5;
//double area = Math.PI * radius * radius;
//Console.WriteLine(area);


//---------- Branches ----------//
//int a = 5;
//int b = 6;
//bool something = a + b > 10;
//if (something)
//    Console.WriteLine(">10");
//else
//    Console.WriteLine("<=10");
// and -> &&
// or -> ||


//---------- Loops ----------//
//int counter = 0;
//while (counter < 10)
//{
//    Console.WriteLine($"Counter: {counter}");
//    counter++;
//}

//int counter = 0;
//do
//{
//    Console.WriteLine($"Counter: {counter}");
//    counter++;
//} while (counter < 10);

//for (int index = 0; index < 10; index++)
//{
//    Console.WriteLine($"Counter: {index}");
//}


//---------- Branches and loops ----------//
//int sum = 0;
//for (int i = 1; i <= 20; i++)
//{
//    if (i % 3 == 0)
//    {
//        sum = sum + i;
//    }
//}
//Console.WriteLine($"The sum is {sum}");

//---------- Arrays, Lists and collections ----------//
var names = new List<string> { "Ana", "Felipe" };
names.Add("Maria");
names.Add("Bill");
names.Remove("Felipe");
foreach (var name in names)
{
    Console.WriteLine($"Hello {name}");
}

for (int i = 0; i < names.Count; i++)
{
    Console.WriteLine(names[i]);
}

Console.WriteLine($"Second value: {names[1]}");

//---------- Search and sort lists ----------//
var names = new List<string> { "Ana", "Felipe" };
names.Add("Maria");
names.Add("Bill");

var index = names.IndexOf("Bill");

if (index != -1)    
    Console.WriteLine($"Found Bill at: {index}");
else
    Console.WriteLine($"Bill not found, indes: {index}");


var names = new List<string> { "Ana", "Felipe" };
names.Add("Maria");
names.Add("Bill");

names.Sort();
foreach (var name in names)
{
    Console.WriteLine(name);
}

// Fibonacci
var fibonacciNumbers = new List<int> { 1, 1 };

var previous0 = fibonacciNumbers[fibonacciNumbers.Count - 1];
var previous1 = fibonacciNumbers[fibonacciNumbers.Count - 2];

fibonacciNumbers.Add(previous0 + previous1);

foreach (var item in fibonacciNumbers)
    Console.WriteLine(item);

// 6765
var fibonacciNumbers = new List<int> { 1, 1 };

while (fibonacciNumbers.Count < 20)
{
    var previous0 = fibonacciNumbers[fibonacciNumbers.Count - 1];
    var previous1 = fibonacciNumbers[fibonacciNumbers.Count - 2];
    fibonacciNumbers.Add(previous0 + previous1);
}

foreach (var item in fibonacciNumbers)
    Console.WriteLine(item);

